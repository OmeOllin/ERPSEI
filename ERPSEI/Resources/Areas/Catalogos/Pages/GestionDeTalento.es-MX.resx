<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActaNacimiento" xml:space="preserve">
    <value>Acta de nacimiento</value>
  </data>
  <data name="AddButton" xml:space="preserve">
    <value>Agregar</value>
  </data>
  <data name="ApellidoMaternoPlaceholder" xml:space="preserve">
    <value>Apellido Materno</value>
  </data>
  <data name="ApellidoPaternoPlaceholder" xml:space="preserve">
    <value>Apellido Paterno</value>
  </data>
  <data name="AreaPlaceholder" xml:space="preserve">
    <value>Área</value>
  </data>
  <data name="CancelButtonTitle" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="CLABE" xml:space="preserve">
    <value>CLABE</value>
  </data>
  <data name="ColActionsHeader" xml:space="preserve">
    <value>Acciones</value>
  </data>
  <data name="ColAreaHeader" xml:space="preserve">
    <value>Área</value>
  </data>
  <data name="ColCorreoHeader" xml:space="preserve">
    <value>Correo</value>
  </data>
  <data name="ColDireccionHeader" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="ColEstadoCivilHeader" xml:space="preserve">
    <value>Estado Civil</value>
  </data>
  <data name="ColFechaIngresoHeader" xml:space="preserve">
    <value>Fecha Ingreso</value>
  </data>
  <data name="ColFechaNacimientoHeader" xml:space="preserve">
    <value>Fecha de Nacimiento</value>
  </data>
  <data name="ColGeneroHeader" xml:space="preserve">
    <value>Género</value>
  </data>
  <data name="ColNameHeader" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="ColOficinaHeader" xml:space="preserve">
    <value>Oficina</value>
  </data>
  <data name="ColPuestoHeader" xml:space="preserve">
    <value>Puesto</value>
  </data>
  <data name="ColTelefonoHeader" xml:space="preserve">
    <value>Teléfono</value>
  </data>
  <data name="ComprobanteDomicilio" xml:space="preserve">
    <value>Comprobante de domicilio</value>
  </data>
  <data name="ComprobanteEstudios" xml:space="preserve">
    <value>Comprobante de estudios</value>
  </data>
  <data name="ContactosEmergencia" xml:space="preserve">
    <value>Contactos de emergencia</value>
  </data>
  <data name="CSF" xml:space="preserve">
    <value>CSF</value>
  </data>
  <data name="CURP" xml:space="preserve">
    <value>CURP</value>
  </data>
  <data name="CURPPlaceholder" xml:space="preserve">
    <value>CURP</value>
  </data>
  <data name="DeactivateButton" xml:space="preserve">
    <value>Dar de baja</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Eliminar</value>
  </data>
  <data name="DeleteEmpleadoDialogQuestion" xml:space="preserve">
    <value>¿Está seguro que desea dar de baja los registros seleccionados?</value>
  </data>
  <data name="DeleteEmpleadoDialogTitle" xml:space="preserve">
    <value>Dar de baja empleado</value>
  </data>
  <data name="DireccionPlaceholder" xml:space="preserve">
    <value>Dirección</value>
  </data>
  <data name="DocumentSuggestion" xml:space="preserve">
    <value>Tenga en cuenta que los archivos no deben tener más de 5 MB y solo se aceptan archivos en formatos .pdf, .jpg, .jpeg y .png. Para reducir el tamaño de los archivos mencionados, visite la siguiente liga: </value>
  </data>
  <data name="EditButtonTitle" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EditDialogTitle" xml:space="preserve">
    <value>Editar Registro</value>
  </data>
  <data name="EditLink" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="EmailPlaceholder" xml:space="preserve">
    <value>Correo Empresarial</value>
  </data>
  <data name="EmpleadoContactoTitle" xml:space="preserve">
    <value>Contacto de Emergencia</value>
  </data>
  <data name="EmpleadoPrimerSeccionTitle" xml:space="preserve">
    <value>Información Personal</value>
  </data>
  <data name="EmpleadoSegundaSeccionTitle" xml:space="preserve">
    <value>Información Laboral</value>
  </data>
  <data name="EmpleadoTercerSeccionTitle" xml:space="preserve">
    <value>Documentos</value>
  </data>
  <data name="EmptySelectItemText" xml:space="preserve">
    <value>Seleccione...</value>
  </data>
  <data name="EstadoCivilPlaceholder" xml:space="preserve">
    <value>Estado Civil</value>
  </data>
  <data name="FechaIngresoPlaceholder" xml:space="preserve">
    <value>Fecha de ingreso</value>
  </data>
  <data name="FechaNacimientoPlaceholder" xml:space="preserve">
    <value>Fecha de nacimiento</value>
  </data>
  <data name="FileFormatMessage" xml:space="preserve">
    <value>El formato del archivo debe ser .pdf, .jpg, .jpeg o .png. Por favor elija otro archivo.</value>
  </data>
  <data name="FileFormatTitle" xml:space="preserve">
    <value>Formato de archivo inválido</value>
  </data>
  <data name="FilterTitle" xml:space="preserve">
    <value>Filtros de búsqueda</value>
  </data>
  <data name="FotoPerfil" xml:space="preserve">
    <value>Imagen de perfil</value>
  </data>
  <data name="GeneroPlaceholder" xml:space="preserve">
    <value>Género</value>
  </data>
  <data name="ImportButtonText" xml:space="preserve">
    <value>Importar</value>
  </data>
  <data name="ImportButtonTitle" xml:space="preserve">
    <value>Importar desde un archivo excel</value>
  </data>
  <data name="ImportExcelDialogTitle" xml:space="preserve">
    <value>Importar empleados</value>
  </data>
  <data name="ImportExcelSuggestionA" xml:space="preserve">
    <value>Descargue la plantilla y rellénela con su información para cargar datos correctamente.</value>
  </data>
  <data name="ImportExcelSuggestionB" xml:space="preserve">
    <value>Seleccione el archivo que rellenó con su información e importe los datos.</value>
  </data>
  <data name="INE" xml:space="preserve">
    <value>INE</value>
  </data>
  <data name="InvalidFormatMsg" xml:space="preserve">
    <value>El formato del archivo debe ser .xlsx, por favor elija otro archivo. Puede descargar la plantilla proporcionada para cargar su información.</value>
  </data>
  <data name="InvalidFormatTitle" xml:space="preserve">
    <value>Formato de archivo inválido</value>
  </data>
  <data name="JefePlaceholder" xml:space="preserve">
    <value>Jefe</value>
  </data>
  <data name="MaxFileSizeMessage" xml:space="preserve">
    <value>El archivo seleccionado supera el máximo tamaño permitido de los archivos. Por favor elija otro archivo con tamaño no mayor a </value>
  </data>
  <data name="MaxFileSizeTitle" xml:space="preserve">
    <value>Tamaño de archivo inválido</value>
  </data>
  <data name="NewDialogTitle" xml:space="preserve">
    <value>Nuevo Registro</value>
  </data>
  <data name="NombrePlaceholder" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="NombrePreferidoPlaceholder" xml:space="preserve">
    <value>Nombre preferido</value>
  </data>
  <data name="NSS" xml:space="preserve">
    <value>NSS</value>
  </data>
  <data name="NSSPlaceholder" xml:space="preserve">
    <value>NSS</value>
  </data>
  <data name="NuevoRegistro" xml:space="preserve">
    <value>Nuevo</value>
  </data>
  <data name="OficinaPlaceholder" xml:space="preserve">
    <value>Oficina</value>
  </data>
  <data name="Otro" xml:space="preserve">
    <value>Otro</value>
  </data>
  <data name="PlantillaButtonTitle" xml:space="preserve">
    <value>Descargar plantilla</value>
  </data>
  <data name="ProfilePicSuggestion" xml:space="preserve">
    <value>Considere subir una foto de perfil profesional para que el resto de las personas puedan reconocerle.</value>
  </data>
  <data name="PuestoPlaceholder" xml:space="preserve">
    <value>Puesto</value>
  </data>
  <data name="RFC" xml:space="preserve">
    <value>RFC</value>
  </data>
  <data name="RFCPlaceholder" xml:space="preserve">
    <value>RFC</value>
  </data>
  <data name="SaveButtonTitle" xml:space="preserve">
    <value>Guardar</value>
  </data>
  <data name="SearchButton" xml:space="preserve">
    <value>Buscar</value>
  </data>
  <data name="SeeButtonTitle" xml:space="preserve">
    <value>Ver</value>
  </data>
  <data name="SeeDialogTitle" xml:space="preserve">
    <value>Ver Registro</value>
  </data>
  <data name="SubareaPlaceholder" xml:space="preserve">
    <value>Subarea</value>
  </data>
  <data name="TelefonoPlaceholder" xml:space="preserve">
    <value>Teléfono</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Gestión de talento</value>
  </data>
</root>
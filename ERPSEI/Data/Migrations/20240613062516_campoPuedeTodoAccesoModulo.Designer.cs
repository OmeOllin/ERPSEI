// <auto-generated />
using System;
using ERPSEI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPSEI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240613062516_campoPuedeTodoAccesoModulo")]
    partial class campoPuedeTodoAccesoModulo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ArchivoEmpleado", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Archivo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoArchivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("ArchivosEmpleado");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Area", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administración"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Auditoría"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Bancos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Contabilidad"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Dirección General"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Expedientes"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Family Office"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Fiscal"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Impuestos"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Legal"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Nóminas"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Operaciones"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Tesorería"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Socio"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ContactoEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("ContactosEmergencia");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("CURP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<int?>("JefeId")
                        .HasColumnType("int");

                    b.Property<string>("NSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePreferido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OficinaId")
                        .HasColumnType("int");

                    b.Property<int?>("PuestoId")
                        .HasColumnType("int");

                    b.Property<string>("RFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubareaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("OficinaId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("SubareaId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosCiviles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Soltero"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Casado"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Genero", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Femenino"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Otro"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oficinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Austria 1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Austria 6"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Big Ben"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Cancún"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Capri"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Centro Urbano"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Cóndor"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Izaguirre"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Lago de Guadalupe"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "León"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Lomas Verdes"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Los Reyes La Paz"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Pafnuncio"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Pirules"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Polanco"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Santa Mónica"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Torre Esmeralda"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Puestos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Analista"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Asistente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Auditor"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Auxiliar"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Chofer"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Desarrollador"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Director"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Socio Director"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Encargado"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Gerente"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Mantenimiento y Limpieza"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Recepcionista"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Recepcionista Coordinadora"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Seguridad Privada"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Socio"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Subencargado"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Subgerente"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Supervisor"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Técnico"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Tesorero"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Subarea", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Subareas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Nombre = "Sistemas"
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 4,
                            Nombre = "Interna"
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 4,
                            Nombre = "Externa"
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 4,
                            Nombre = "Impuestos"
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 5,
                            Nombre = "Control Vehicular"
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 12,
                            Nombre = "IMSS"
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 12,
                            Nombre = "Internas"
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 12,
                            Nombre = "Facturación"
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 12,
                            Nombre = "Nóminas"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.TipoArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoArchivo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Imagen de perfil"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Acta de nacimiento"
                        },
                        new
                        {
                            Id = 3,
                            Description = "CURP"
                        },
                        new
                        {
                            Id = 4,
                            Description = "CLABE"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Comprobante de domicilio"
                        },
                        new
                        {
                            Id = 6,
                            Description = "CSF"
                        },
                        new
                        {
                            Id = 7,
                            Description = "INE"
                        },
                        new
                        {
                            Id = 8,
                            Description = "RFC"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Comprobante de estudios"
                        },
                        new
                        {
                            Id = 10,
                            Description = "NSS"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Otro"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.ActividadEconomicaEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("ActividadEconomicaId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActividadEconomicaId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ActividadesEconomicasEmpresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.ArchivoEmpresa", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Archivo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoArchivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("ArchivosEmpresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.BancoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Firmante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Responsable")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("BancosEmpresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Accionista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Administrador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoBancos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoFacturacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoGeneral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("DomicilioFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaConstitucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioAsimilados")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioFacturacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioOperacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NivelId")
                        .HasColumnType("int");

                    b.Property<string>("ObjetoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrigenId")
                        .HasColumnType("int");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NivelId");

                    b.HasIndex("OrigenId");

                    b.HasIndex("PerfilId");

                    b.HasIndex("RegimenFiscalId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordinal")
                        .HasColumnType("int");

                    b.Property<bool>("PuedeFacturar")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Niveles");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Origen", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Origenes");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Perfiles");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.ProductoServicioPerfil", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("PerfilId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductoServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("ProductoServicioId");

                    b.ToTable("ProductosServiciosPerfil");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.TipoArchivoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoArchivoEmpresa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "CSF"
                        },
                        new
                        {
                            Id = 2,
                            Description = "INE"
                        },
                        new
                        {
                            Id = 3,
                            Description = "RFC"
                        },
                        new
                        {
                            Id = 4,
                            Description = "ComprobanteDomicilio"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Otro"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.ActividadEconomica", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActividadesEconomicas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Concepto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Descuento")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("ObjetoImpuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int?>("PrefacturaId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoServicioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Retencion")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TasaRetencion")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("TasaTraslado")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<decimal>("Traslado")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("UnidadMedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjetoImpuestoId");

                    b.HasIndex("PrefacturaId");

                    b.HasIndex("ProductoServicioId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("Conceptos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.EstatusPrefactura", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EstatusPrefactura");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Solicitada",
                            Deshabilitado = 0
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Autorizada",
                            Deshabilitado = 0
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Finalizada",
                            Deshabilitado = 0
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Exportacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exportaciones");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Bancarizado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaBeneficiario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuentaOrdenante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("NombreBancoEmisorCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDeOperacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatronCuentaBeneficiario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatronCuentaOrdenante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFCEmisorCuentaBeneficiario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFCEmisorCuentaOrdenante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCadenaPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormasPago");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Impuesto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<bool>("Federal")
                        .HasColumnType("bit");

                    b.Property<bool>("Local")
                        .HasColumnType("bit");

                    b.Property<bool>("Retencion")
                        .HasColumnType("bit");

                    b.Property<bool>("Traslado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Impuestos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Mes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Meses");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MetodosPago");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Moneda", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Decimales")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<double>("PorcentajeVariacion")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Monedas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.ObjetoImpuesto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ObjetosImpuesto");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Periodicidad", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Periodicidades");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Prefactura", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<int>("EmisorId")
                        .HasColumnType("int");

                    b.Property<int?>("EstatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ExportacionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<int>("MonedaId")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroOperacion")
                        .HasColumnType("int");

                    b.Property<int>("ReceptorId")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TipoCambio")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("TipoComprobanteId")
                        .HasColumnType("int");

                    b.Property<int>("UsoCFDIId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAutorizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioCreadorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsuarioFinalizadorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EmisorId");

                    b.HasIndex("EstatusId");

                    b.HasIndex("ExportacionId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("MonedaId");

                    b.HasIndex("ReceptorId");

                    b.HasIndex("TipoComprobanteId");

                    b.HasIndex("UsoCFDIId");

                    b.HasIndex("UsuarioAutorizadorId");

                    b.HasIndex("UsuarioCreadorId");

                    b.HasIndex("UsuarioFinalizadorId");

                    b.ToTable("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.ProductoServicio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<bool>("IncluirIEPSTraslado")
                        .HasColumnType("bit");

                    b.Property<bool>("IncluirIVATraslado")
                        .HasColumnType("bit");

                    b.Property<string>("PalabrasSimilares")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductosServicios");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.RegimenFiscal", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaPersonaFisica")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPersonaMoral")
                        .HasColumnType("bit");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegimenesFiscales");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TasaOCuota", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<int>("FactorId")
                        .HasColumnType("int");

                    b.Property<bool>("Fijo")
                        .HasColumnType("bit");

                    b.Property<int>("ImpuestoId")
                        .HasColumnType("int");

                    b.Property<bool>("Rango")
                        .HasColumnType("bit");

                    b.Property<bool>("Retencion")
                        .HasColumnType("bit");

                    b.Property<bool>("Traslado")
                        .HasColumnType("bit");

                    b.Property<double>("ValorMaximo")
                        .HasColumnType("float");

                    b.Property<double>("ValorMinimo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.HasIndex("ImpuestoId");

                    b.ToTable("TasasOCuotas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TipoComprobante", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorMaximo")
                        .HasPrecision(24, 6)
                        .HasColumnType("decimal(24,6)");

                    b.HasKey("Id");

                    b.ToTable("TiposComprobante");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TipoFactor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TiposFactor");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TipoRelacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TiposRelacion");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.UnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnidadesMedida");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.UsoCFDI", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaPersonaFisica")
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPersonaMoral")
                        .HasColumnType("bit");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("RegimenFiscalReceptor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsosCFDI");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AccesoModulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ModuloId")
                        .HasColumnType("int");

                    b.Property<int>("PuedeAutorizar")
                        .HasColumnType("int");

                    b.Property<int>("PuedeConsultar")
                        .HasColumnType("int");

                    b.Property<int>("PuedeEditar")
                        .HasColumnType("int");

                    b.Property<int>("PuedeEliminar")
                        .HasColumnType("int");

                    b.Property<int>("PuedeTodo")
                        .HasColumnType("int");

                    b.Property<string>("RolId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ModuloId");

                    b.HasIndex("RolId");

                    b.ToTable("AccesosModulos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreregisterAuthorized")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PasswordResetNeeded")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Deshabilitado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreNormalizado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modulos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deshabilitado = 0,
                            Nombre = "Gestión de Talento",
                            NombreNormalizado = "gestiondetalento"
                        },
                        new
                        {
                            Id = 2,
                            Deshabilitado = 0,
                            Nombre = "Usuarios",
                            NombreNormalizado = "usuarios"
                        },
                        new
                        {
                            Id = 3,
                            Deshabilitado = 0,
                            Nombre = "Puestos",
                            NombreNormalizado = "puestos"
                        },
                        new
                        {
                            Id = 4,
                            Deshabilitado = 0,
                            Nombre = "Áreas",
                            NombreNormalizado = "areas"
                        },
                        new
                        {
                            Id = 5,
                            Deshabilitado = 0,
                            Nombre = "Subareas",
                            NombreNormalizado = "subareas"
                        },
                        new
                        {
                            Id = 6,
                            Deshabilitado = 0,
                            Nombre = "Oficinas",
                            NombreNormalizado = "oficinas"
                        },
                        new
                        {
                            Id = 7,
                            Deshabilitado = 0,
                            Nombre = "Empresas",
                            NombreNormalizado = "empresas"
                        },
                        new
                        {
                            Id = 8,
                            Deshabilitado = 0,
                            Nombre = "Orígenes",
                            NombreNormalizado = "origenes"
                        },
                        new
                        {
                            Id = 9,
                            Deshabilitado = 0,
                            Nombre = "Niveles",
                            NombreNormalizado = "niveles"
                        },
                        new
                        {
                            Id = 10,
                            Deshabilitado = 0,
                            Nombre = "Perfiles",
                            NombreNormalizado = "perfiles"
                        },
                        new
                        {
                            Id = 11,
                            Deshabilitado = 0,
                            Nombre = "Vacaciones",
                            NombreNormalizado = "vacaciones"
                        },
                        new
                        {
                            Id = 12,
                            Deshabilitado = 0,
                            Nombre = "Incapacidades",
                            NombreNormalizado = "incapacidades"
                        },
                        new
                        {
                            Id = 13,
                            Deshabilitado = 0,
                            Nombre = "Permisos",
                            NombreNormalizado = "permisos"
                        },
                        new
                        {
                            Id = 14,
                            Deshabilitado = 0,
                            Nombre = "Prefacturas",
                            NombreNormalizado = "prefacturas"
                        },
                        new
                        {
                            Id = 15,
                            Deshabilitado = 0,
                            Nombre = "Organigrama",
                            NombreNormalizado = "organigrama"
                        },
                        new
                        {
                            Id = 16,
                            Deshabilitado = 0,
                            Nombre = "Asistencia",
                            NombreNormalizado = "asistencia"
                        },
                        new
                        {
                            Id = 17,
                            Deshabilitado = 0,
                            Nombre = "Roles",
                            NombreNormalizado = "roles"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ArchivoEmpleado", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Empleado", "Empleado")
                        .WithMany("ArchivosEmpleado")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.TipoArchivo", "TipoArchivo")
                        .WithMany("ArchivosEmpleado")
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Empleado");

                    b.Navigation("TipoArchivo");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ContactoEmergencia", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Empleado", "Empleado")
                        .WithMany("ContactosEmergencia")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Empleado", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Area", "Area")
                        .WithMany("Empleados")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.EstadoCivil", "EstadoCivil")
                        .WithMany("Empleados")
                        .HasForeignKey("EstadoCivilId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Genero", "Genero")
                        .WithMany("Empleados")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Oficina", "Oficina")
                        .WithMany("Empleados")
                        .HasForeignKey("OficinaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Subarea", "Subarea")
                        .WithMany("Empleados")
                        .HasForeignKey("SubareaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Area");

                    b.Navigation("EstadoCivil");

                    b.Navigation("Genero");

                    b.Navigation("Oficina");

                    b.Navigation("Puesto");

                    b.Navigation("Subarea");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Subarea", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Area", "Area")
                        .WithMany("Subareas")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Area");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.ActividadEconomicaEmpresa", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.SAT.ActividadEconomica", "ActividadEconomica")
                        .WithMany("ActividadesEconomicasEmpresa")
                        .HasForeignKey("ActividadEconomicaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empresas.Empresa", "Empresa")
                        .WithMany("ActividadesEconomicasEmpresa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ActividadEconomica");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.ArchivoEmpresa", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empresas.Empresa", "Empresa")
                        .WithMany("ArchivosEmpresa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empresas.TipoArchivoEmpresa", "TipoArchivo")
                        .WithMany("ArchivosEmpresa")
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Empresa");

                    b.Navigation("TipoArchivo");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.BancoEmpresa", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empresas.Empresa", "Empresa")
                        .WithMany("BancosEmpresa")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Empresa", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empresas.Nivel", "Nivel")
                        .WithMany("Empresas")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empresas.Origen", "Origen")
                        .WithMany("Empresas")
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Empresas.Perfil", "Perfil")
                        .WithMany("Empresas")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.SAT.RegimenFiscal", "RegimenFiscal")
                        .WithMany("Empresas")
                        .HasForeignKey("RegimenFiscalId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Nivel");

                    b.Navigation("Origen");

                    b.Navigation("Perfil");

                    b.Navigation("RegimenFiscal");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.ProductoServicioPerfil", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empresas.Perfil", "Perfil")
                        .WithMany("ProductosServiciosPerfil")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.SAT.ProductoServicio", "ProductoServicio")
                        .WithMany("ProductosServiciosPerfil")
                        .HasForeignKey("ProductoServicioId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Perfil");

                    b.Navigation("ProductoServicio");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Concepto", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.SAT.ObjetoImpuesto", "ObjetoImpuesto")
                        .WithMany("Conceptos")
                        .HasForeignKey("ObjetoImpuestoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.Prefactura", "Prefactura")
                        .WithMany("Conceptos")
                        .HasForeignKey("PrefacturaId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.SAT.ProductoServicio", "ProductoServicio")
                        .WithMany()
                        .HasForeignKey("ProductoServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.UnidadMedida", "UnidadMedida")
                        .WithMany("Conceptos")
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ObjetoImpuesto");

                    b.Navigation("Prefactura");

                    b.Navigation("ProductoServicio");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Prefactura", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empresas.Empresa", "Emisor")
                        .WithMany("PrefacturasEmitidas")
                        .HasForeignKey("EmisorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.EstatusPrefactura", "Estatus")
                        .WithMany("Prefacturas")
                        .HasForeignKey("EstatusId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.SAT.Exportacion", "Exportacion")
                        .WithMany("Prefacturas")
                        .HasForeignKey("ExportacionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.SAT.FormaPago", "FormaPago")
                        .WithMany("Prefacturas")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.MetodoPago", "MetodoPago")
                        .WithMany("Prefacturas")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.Moneda", "Moneda")
                        .WithMany("Prefacturas")
                        .HasForeignKey("MonedaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.Empresas.Empresa", "Receptor")
                        .WithMany("PrefacturasRecibidas")
                        .HasForeignKey("ReceptorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.TipoComprobante", "TipoComprobante")
                        .WithMany("Prefacturas")
                        .HasForeignKey("TipoComprobanteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.UsoCFDI", "UsoCFDI")
                        .WithMany("Prefacturas")
                        .HasForeignKey("UsoCFDIId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", "UsuarioAutorizador")
                        .WithMany("PrefacturasAutorizadas")
                        .HasForeignKey("UsuarioAutorizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", "UsuarioCreador")
                        .WithMany("PrefacturasCreadas")
                        .HasForeignKey("UsuarioCreadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", "UsuarioFinalizador")
                        .WithMany("PrefacturasFinalizadas")
                        .HasForeignKey("UsuarioFinalizadorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Emisor");

                    b.Navigation("Estatus");

                    b.Navigation("Exportacion");

                    b.Navigation("FormaPago");

                    b.Navigation("MetodoPago");

                    b.Navigation("Moneda");

                    b.Navigation("Receptor");

                    b.Navigation("TipoComprobante");

                    b.Navigation("UsoCFDI");

                    b.Navigation("UsuarioAutorizador");

                    b.Navigation("UsuarioCreador");

                    b.Navigation("UsuarioFinalizador");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TasaOCuota", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.SAT.TipoFactor", "Factor")
                        .WithMany("TasasOCuotas")
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.SAT.Impuesto", "Impuesto")
                        .WithMany("TasasOCuotas")
                        .HasForeignKey("ImpuestoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Factor");

                    b.Navigation("Impuesto");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AccesoModulo", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Usuarios.Modulo", "Modulo")
                        .WithMany("Accesos")
                        .HasForeignKey("ModuloId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppRole", "Rol")
                        .WithMany("Accesos")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Modulo");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AppUser", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Usuarios.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Area", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Subareas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Empleado", b =>
                {
                    b.Navigation("ArchivosEmpleado");

                    b.Navigation("ContactosEmergencia");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.EstadoCivil", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Genero", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Oficina", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Subarea", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.TipoArchivo", b =>
                {
                    b.Navigation("ArchivosEmpleado");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Empresa", b =>
                {
                    b.Navigation("ActividadesEconomicasEmpresa");

                    b.Navigation("ArchivosEmpresa");

                    b.Navigation("BancosEmpresa");

                    b.Navigation("PrefacturasEmitidas");

                    b.Navigation("PrefacturasRecibidas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Nivel", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Origen", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.Perfil", b =>
                {
                    b.Navigation("Empresas");

                    b.Navigation("ProductosServiciosPerfil");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empresas.TipoArchivoEmpresa", b =>
                {
                    b.Navigation("ArchivosEmpresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.ActividadEconomica", b =>
                {
                    b.Navigation("ActividadesEconomicasEmpresa");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.EstatusPrefactura", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Exportacion", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.FormaPago", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Impuesto", b =>
                {
                    b.Navigation("TasasOCuotas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.MetodoPago", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Moneda", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.ObjetoImpuesto", b =>
                {
                    b.Navigation("Conceptos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.Prefactura", b =>
                {
                    b.Navigation("Conceptos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.ProductoServicio", b =>
                {
                    b.Navigation("ProductosServiciosPerfil");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.RegimenFiscal", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TipoComprobante", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.TipoFactor", b =>
                {
                    b.Navigation("TasasOCuotas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.UnidadMedida", b =>
                {
                    b.Navigation("Conceptos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.SAT.UsoCFDI", b =>
                {
                    b.Navigation("Prefacturas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AppRole", b =>
                {
                    b.Navigation("Accesos");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.AppUser", b =>
                {
                    b.Navigation("PrefacturasAutorizadas");

                    b.Navigation("PrefacturasCreadas");

                    b.Navigation("PrefacturasFinalizadas");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Usuarios.Modulo", b =>
                {
                    b.Navigation("Accesos");
                });
#pragma warning restore 612, 618
        }
    }
}

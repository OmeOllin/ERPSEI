// <auto-generated />
using System;
using ERPSEI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERPSEI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231031053245_catalogos_oficinas_subareas")]
    partial class catalogos_oficinas_subareas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ERPSEI.Data.Entities.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreregisterAuthorized")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PasswordResetNeeded")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId")
                        .IsUnique()
                        .HasFilter("[EmpleadoId] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ArchivoEmpleado", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("Archivo")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoArchivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("TipoArchivoId");

                    b.ToTable("ArchivosEmpleado");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Administración"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Auditoría"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Bancos"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Contabilidad"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Dirección General"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Expedientes"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Fiscal"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Impuestos"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Legal"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Nóminas"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Operaciones"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Recursos Humanos"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Tesorería"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ContactoEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("ContactosEmergencia");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArchivoEmpleadoId")
                        .HasColumnType("int");

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OficinaId")
                        .HasColumnType("int");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ProfilePicture")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("PuestoId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubareaId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("EstadoCivilId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("OficinaId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("SubareaId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.EstadoCivil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosCiviles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Soltero(a)"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Casado(a)"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Femenino"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Oficina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Oficinas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Austria 1"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Austria 6"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Big Ben"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Cancún"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Capri"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Cóndor"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Izaguirre"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Lago de Guadalupe"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "León"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Los Reyes la Paz"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Pafnuncio"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Pirules"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Polanco"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Santa Mónica"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Torre Esmeralda"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Puestos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Analista"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Asistente"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Auditor"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Auxiliar"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Chofer"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Desarrollador"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Director"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Encargado"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Gerente"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Mantenimiento y Limpieza"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Pasante"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Recepcionista"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Seguridad Privada"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Socio Director"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Subencargado"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Subgerente"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Supervisor"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Técnico"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Tesorero"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Subarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subareas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Control Vehicular"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Externa"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Facturación"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "IMSS"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Interna"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Internas"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Nóminas"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Sistemas"
                        });
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.TipoArchivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoArchivo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Acta de nacimiento"
                        },
                        new
                        {
                            Id = 2,
                            Description = "CURP"
                        },
                        new
                        {
                            Id = 3,
                            Description = "CLABE"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Comprobante de domicilio"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Contactos de emergencia"
                        },
                        new
                        {
                            Id = 6,
                            Description = "CSF"
                        },
                        new
                        {
                            Id = 7,
                            Description = "INE"
                        },
                        new
                        {
                            Id = 8,
                            Description = "RFC"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Comprobante de estudios"
                        },
                        new
                        {
                            Id = 10,
                            Description = "NSS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.AppUser", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Empleado", "Empleado")
                        .WithOne("User")
                        .HasForeignKey("ERPSEI.Data.Entities.AppUser", "EmpleadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ArchivoEmpleado", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Empleado", "Empleado")
                        .WithMany("ArchivosEmpleado")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.TipoArchivo", "TipoArchivo")
                        .WithMany("ArchivosEmpleado")
                        .HasForeignKey("TipoArchivoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Empleado");

                    b.Navigation("TipoArchivo");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.ContactoEmergencia", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Empleado", "Empleado")
                        .WithMany("ContactosEmergencia")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Empleado", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.Empleados.Area", "Area")
                        .WithMany("Empleados")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.EstadoCivil", "EstadoCivil")
                        .WithMany("Empleados")
                        .HasForeignKey("EstadoCivilId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Genero", "Genero")
                        .WithMany("Empleados")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Oficina", "Oficina")
                        .WithMany("Empleados")
                        .HasForeignKey("OficinaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Puesto", "Puesto")
                        .WithMany("Empleados")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ERPSEI.Data.Entities.Empleados.Subarea", "Subarea")
                        .WithMany("Empleados")
                        .HasForeignKey("SubareaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Area");

                    b.Navigation("EstadoCivil");

                    b.Navigation("Genero");

                    b.Navigation("Oficina");

                    b.Navigation("Puesto");

                    b.Navigation("Subarea");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERPSEI.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ERPSEI.Data.Entities.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Area", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Empleado", b =>
                {
                    b.Navigation("ArchivosEmpleado");

                    b.Navigation("ContactosEmergencia");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.EstadoCivil", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Genero", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Oficina", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Puesto", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.Subarea", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ERPSEI.Data.Entities.Empleados.TipoArchivo", b =>
                {
                    b.Navigation("ArchivosEmpleado");
                });
#pragma warning restore 612, 618
        }
    }
}
